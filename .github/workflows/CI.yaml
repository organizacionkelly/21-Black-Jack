name: ci
on:
  push:
    branches:
      - main

jobs: 
  Test-sonar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2         
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Test
        env:
          GITHUB_USERNAME: ${{ secrets.USER_NAME }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: mvn clean test -DuniqueVersion=false -Dmaven.source.useDefaultManifestFile=true -Dmaven.source.includePom=true -DaltDeploymentRepository='github::default::https://maven.pkg.github.com/organizacionkelly/prueba-mvn'
      - name: Lista
        run: | 
         cd target
         ls -la
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.TOKEN_SONAR }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          LC_ALL: "ru_RU.UTF-8"
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
         SONAR_TOKEN: ${{ secrets.TOKEN_SONAR }}
        with:
          scanMetadataReportFile: .scannerwork/report-task.txt
          # Force to fail step after specific time
          timeout-minutes: 2

  publish-artifact:
    runs-on: ubuntu-latest
    needs: [Test-sonar]
    permissions: 
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Set up Maven Settings for deploy
        uses: s4u/maven-settings-action@v2.1.1
      - name: Publish package
        env:
          GITHUB_USERNAME: ${{ secrets.USER_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: mvn source:jar deploy -DuniqueVersion=false -Dmaven.source.useDefaultManifestFile=true -Dmaven.source.includePom=true -DaltDeploymentRepository='github::default::https://maven.pkg.github.com/organizacionkelly/prueba-mvn'
 
  build_image:
    name: build image
    runs-on: ubuntu-latest
    needs: [Test-sonar]
    steps:
      - uses: actions/checkout@master
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.USER_DOCKER }}
          password: ${{  secrets.PASSWORD_DOCKER }}
      - name: build and push to docker
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: kelly1311/new-repo:app-java-1